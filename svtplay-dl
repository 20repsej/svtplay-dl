#!/usr/bin/env python
import re
import urllib2
import sys
import os
import subprocess

def getdata(url):
    """ Get the page to parse it for streams """
    request = urllib2.Request(url)
    request.add_header = [('User-Agent', 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-GB; rv:1.9.0.3) Gecko/2008092417 Firefox/3.0.3')]
    response = urllib2.urlopen(request)
    data = response.read()
    response.close()
    return data

def calc_data(byte, total):
    """ Print some info about how much we have downloaded """
    percent = float(byte) / total
    percent = round(percent*100, 2)
    sys.stdout.write("Downloaded %d of %d bytes (%.2f%%)\r" % (byte, total, percent))
    if byte >= total:
        sys.stdout.write('\n')

def getrtmp(url, output):
    """ Get the stream from RTMP """
    command = ["/usr/bin/rtmpdump", "-r", url, "-o", output]
    subprocess.call(command)

def gethttp(url, output):
    """ Get the stream from HTTP """
    response = urllib2.urlopen(url)
    total_size = response.info().getheader('Content-Length').strip()
    total_size = int(total_size)
    bytes_so_far = 0
    fd = open(output,"wb")

    while 1:
        chunk = response.read(8192)
        bytes_so_far += len(chunk)
        
        if not chunk:
            break

        fd.write(chunk)
        calc_data(bytes_so_far, total_size)

    fd.close()

argv = sys.argv[1]
DATA = getdata(argv)
MATCH = re.search('dynamicStreams=(.*)\&amp\;background', DATA)
if MATCH:
    new = MATCH.group(1)
    tmp = new.split("|")
    MATCH = re.search('url:(.*)\,', tmp[0])
else:
    MATCH = re.search('pathflv=(.*)\&amp\;background', DATA)
    if not MATCH:
        print "Err: cant find stream"
        sys.exit(2)

STREAM = MATCH.group(1)
OUTPUT = os.path.basename(STREAM)

if STREAM[0:4] == "rtmp":
    getrtmp(STREAM, OUTPUT)
else:
    gethttp(STREAM, OUTPUT)
